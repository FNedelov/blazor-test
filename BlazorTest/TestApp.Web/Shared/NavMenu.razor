@using TestApp.Web.HelperClasses;
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">TestApp.Web</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="() => ToggleNavMenu(navSubmenu)">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="() => ToggleNavMenu(NavSubmenu.None)" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="() => TogleSubmenu(NavSubmenu.Samples)">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Sample functions
            </NavLink>
        </li>
        @if (navSubmenu == NavSubmenu.Samples)
        {
            <li class="nav-item px-5">
                <NavLink class="nav-link" @onclick="() => ToggleNavMenu()" href="counter">
                    <span class="oi oi-plus" aria-hidden="true"></span> Counter
                </NavLink>
            </li>
            <li class="nav-item px-5">
                <NavLink class="nav-link" @onclick="() => ToggleNavMenu()" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch Data
                </NavLink>
            </li>
        }

        <li class="nav-item px-3">
            <NavLink class="nav-link" @onclick="() => TogleSubmenu(NavSubmenu.Data)">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Data
            </NavLink>
        </li>
        @if (navSubmenu == NavSubmenu.Data)
        {
            <li class="nav-item px-5">
                <NavLink class="nav-link" @onclick="() => ToggleNavMenu()" href="counter">
                    <span class="oi oi-data-transfer-upload" aria-hidden="true"></span> Excel
                </NavLink>
            </li>
            <li class="nav-item px-5">
                <NavLink class="nav-link" @onclick="() => ToggleNavMenu()" href="fetchdata">
                    <span class="oi oi-bar-chart" aria-hidden="true"></span> Data manipulation
                </NavLink>
            </li>
        }

        <AuthorizeView Roles="@($"{AppData.ROLE_ADMIN}, {AppData.ROLE_BATMAN}")">
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="() => TogleSubmenu(NavSubmenu.Admin)">
                        <span class="oi oi-cog" aria-hidden="true"></span> Admin functions
                    </NavLink>
                </li>
                @if (navSubmenu == NavSubmenu.Admin)
                {
                    <li class="nav-item px-5">
                        <NavLink class="nav-link" @onclick="() => ToggleNavMenu()" href="counter">
                            <span class="oi oi-briefcase" aria-hidden="true"></span> Admin page
                        </NavLink>
                    </li>
                    <AuthorizeView Roles="@(AppData.ROLE_BATMAN)" Context="BatmanContext">
                        <Authorized>
                            <li class="nav-item px-5">
                                <NavLink class="nav-link" @onclick="() => ToggleNavMenu()" href="secret">
                                    <span class="oi oi-pulse" aria-hidden="true"></span> Secret page
                                </NavLink>
                            </li>
                        </Authorized>
                    </AuthorizeView>
                }
            </Authorized>
        </AuthorizeView>
    </ul>
</div>

@code {
    private enum NavSubmenu
    {
        None,
        Samples,
        Data,
        Admin
    }

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private NavSubmenu navSubmenu = NavSubmenu.None;
    private bool collapseNavMenu = true;

    private void ToggleNavMenu(NavSubmenu? submenu = null)
    {
        collapseNavMenu = !collapseNavMenu;
        navSubmenu = submenu ?? navSubmenu;
    }

    private void TogleSubmenu(NavSubmenu submenu)
    {
        navSubmenu = (navSubmenu == submenu) ? NavSubmenu.None : submenu;
    }
}